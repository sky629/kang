services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kang-postgres
    environment:
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - kang-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kang-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kang-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes

  # FastAPI Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: kang-app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/.venv  # Exclude venv from sync
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kang-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  kang-network:
    driver: bridge