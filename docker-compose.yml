services:
  # PostgreSQL Database (with pgvector extension)
  postgres:
    image: pgvector/pgvector:pg15
    container_name: kang-postgres
    environment:
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      POSTGRES_DB: kang_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - kang-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kang-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kang-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes

  # Ollama Service (GPT-OSS-20B)
  ollama:
    image: ollama/ollama:latest
    container_name: kang-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/app/.ollama
      - huggingface_cache:/app/.cache/huggingface  # HuggingFace models cache
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=24h
    networks:
      - kang-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ollama", "--version"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        reservations:
          memory: 16G

  # FastAPI Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: kang-app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/.venv  # Exclude venv from sync
      - huggingface_cache:/app/.cache/huggingface  # Share HuggingFace cache
      - upload_data:/app/uploads  # Document upload storage
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - kang-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  ollama_data:  # Ollama models and configuration
  huggingface_cache:  # HuggingFace models cache
  upload_data:  # Document upload storage

networks:
  kang-network:
    driver: bridge